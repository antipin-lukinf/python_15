# –ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3—è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå –ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ, —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

import logging
from datetime import datetime

FORMAT = '{levelname} - {asctime} - {msg}'
logging.basicConfig(level=logging.INFO, filename='date.log', encoding='utf-8',
                    format=FORMAT, style='{')
logger = logging.getLogger(__name__)

MONTHS = ("", '—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', "–∞–ø—Ä", "–º–∞—è", "–∏—é–Ω", "–∏—é–ª", "–∞–≤–≥", "—Å–µ–Ω", "–æ–∫—Ç", "–Ω–æ—è", "–¥–µ–∫")
WEEKDAYS = ("–ø–æ", "–≤—Ç", "—Å—Ä", "—á–µ", "–ø—è", "—Å—É", "–≤–æ")


def get_date(string: str) -> datetime:
    year = datetime.now().year
    count, weekday, month = string.split()
    month = MONTHS.index(month[:3])
    weekday = WEEKDAYS.index(weekday[:2])
    count = int(count[0])
    logger.info(f'{count}, {weekday}, {month}, {year}')
    spam_count = 0
    for day in range(1, 31 + 1):
        date = datetime(day=day, month=month, year=year)
        if date.weekday() == weekday:
            spam_count += 1
            if spam_count == count:
                return date


if __name__ == '__main__':
    print(get_date('3-—è —Å—Ä–µ–¥–∞ –º–∞—è'))
    print(get_date('1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è'))
    print(datetime.now().weekday())